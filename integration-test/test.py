from enn_trainer import load_agent
from rogue_net_rs import RustRogueNet
from entity_gym.env import *
import numpy as np

# fmt: off
obs1 = Observation(
    features={
        "EnemyFighter": [
            [232.74983, 186.70058, 508.6073, -114.079796, 0.9954099, -0.095703594, 0, 1],
        ],
        "Fighter": [
            [339.02588, -204.4954, -262.44766, 20.978577, -0.564637, 0.8253393, 2532, 0, 1],
        ],
        "Asteroid": [
            [5, 46.376263, 1203.4915, -3.97345, -150.14291, 60.38599],
            [5, 49.34102, 1183.9479, -363.31302, -13.000875, 51.517563],
            [5, 35.517136, -695.7671, -605.3356, 109.01546, -16.297422],
            [5, 42.010525, -1161.8778, -228.29347, 186.00848, -42.126675],
            [5, 40.753147, 1282.2185, 248.13007, -4.4167175, -72.66925],
            [5, 44.961437, -762.24255, 289.04678, 157.42297, -158.60793],
            [5, 42.685375, -941.1277, 476.4735, -49.145126, -74.60949],
            [5, 27.552427, -580.9402, -442.11395, -1.0592155, 133.90579],
            [5, 28.417313, 1083.5337, -648.32684, 122.441696, -188.09543],
            [5, 38.9011, -1236.2872, -546.13824, -229.52197, 48.143127],
            [5, 39.70717, 1487.232, 457.00317, 157.47311, 3.314621],
            [5, 49.706795, -251.46506, -612.7794, 3.3750985, 138.66794],
            [5, 44.58143, -1328.8284, -68.948456, 91.22243, -23.057056],
            [5, 48.575893, -916.32965, 727.3914, -191.93604, 151.06541],
            [5, 44.075138, -197.04839, 671.0397, -161.54645, -250.90727],
            [5, 32.699207, -637.0444, -723.98193, 14.30631, -122.43662],
            [5, 31.008062, -1443.92, -726.2446, 9.857653, -299.56558],
            [5, 38.41469, 1498.2506, 287.29987, -0.17997609, 176.20218],
            [5, 42.33036, -957.7011, 23.167963, 31.80194, -264.99652],
            [5, 53.697002, -687.2167, -417.792, -16.160547, 137.36206],
            [5, 32.312138, -1181.1497, 83.57132, -29.483334, -220.64932],
            [5, 33.01252, 1078.808, -492.2517, -68.88859, -17.020115],
            [5, 39.285084, -1493.3867, -164.23772, -133.50905, -106.88424],
            [5, 47.90092, -998.0757, -380.609, 20.12912, 86.75376],
            [5, 32.053154, 1220.6486, 450.12143, 278.13226, -46.157448],
        ],
        "Bullet": [
            [214.73251, 24.415619, -631.59863, 696.7208, 22],
        ],
    },
    ids={
        "EnemyFighter": [0],
        "Fighter": [1],
        "Asteroid": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26],
        "Bullet": [27],
    },
    done=False,
    reward=0.0,
    actions={"FighterAction": CategoricalActionMask(actor_types=["Fighter"])},
)

obs2 = Observation(
    features={
        "Bullet": [
            [332.4966, 229.59288, -531.68524, 888.1057, 21],
            [187.94043, 223.05742, -733.5758, 595.61725, 9],
        ],
        "Asteroid": [
            [5, 46.376263, 1343.6213, -60.333725, -150.14291, 60.38599],
            [5, 49.34102, 1196.0782, -411.39615, -13.000875, 51.517563],
            [5, 35.517136, -797.5166, -590.1239, 109.01546, -16.297422],
            [5, 42.010525, -1335.4867, -188.97487, 186.00848, -42.126675],
            [5, 40.753147, 1286.3406, 315.95453, -4.4167175, -72.66925],
            [5, 44.961437, -909.1708, 437.07986, 157.42297, -158.60793],
            [5, 42.685375, -895.25684, 546.1078, -49.145126, -74.60949],
            [5, 27.552427, -579.9507, -567.0937, -1.0592155, 133.90579],
            [5, 31.150223, -828.203, 701.4151, -53.641724, 73.88277],
            [5, 38.9011, -1022.0626, -591.07086, -229.52197, 48.143127],
            [5, 39.70717, 1340.2526, 453.90906, 157.47311, 3.314621],
            [5, 24.657486, 1340.7322, -642.3886, -60.488983, -399.08264],
            [5, 44.58143, -1413.9666, -47.428467, 91.22243, -23.057056],
            [5, 40.547077, 1062.664, 665.6409, -111.578735, 208.53827],
            [5, 36.653584, 716.2661, -715.8644, 38.343506, -50.872932],
            [5, 50.828888, 1476.1198, -478.91013, 69.12782, -242.57382],
            [5, 31.008062, -1453.1178, -446.65137, 9.857653, -299.56558],
            [5, 38.41469, 1498.4147, 122.844124, -0.17997609, 176.20218],
            [5, 42.33036, -987.38104, 270.49826, 31.80194, -264.99652],
            [5, 53.697002, -672.1332, -545.9966, -16.160547, 137.36206],
            [5, 32.312138, -1153.6282, 289.51077, -29.483334, -220.64932],
            [5, 33.01252, 1143.1, -476.36584, -68.88859, -17.020115],
            [5, 47.310513, 363.33664, -743.5533, 82.75871, -7.842938],
            [5, 47.90092, -1016.86084, -461.57898, 20.12912, 86.75376],
            [5, 26.029097, 738.6734, 746.85504, -52.49785, 221.72945],
        ],
        "Fighter": [
            [-236.2311, 281.71817, 473.78757, 159.7667, 0.8276602, -0.5612295, 2616, 0, 0],
        ],
        "EnemyFighter": [
            [426.5647, -16.637564, -267.9816, 134.85497, -0.93203545, 0.36236712, 0, 0],
        ],
    },
    ids={
        "Bullet": [0, 1],
        "Asteroid": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26],
        "Fighter": [27],
        "EnemyFighter": [28],
    },
    done=False,
    reward=0.0,
    actions={"FighterAction": CategoricalActionMask(actor_types=["Fighter"])},
)
# fmt: on


def test_interpolated_vgated_polar_relpos_encoding():
    agent = load_agent("../test-data/interpolated-vgated-polar-relpos")
    agent.agent.backbone.relpos_encoding.enable_negative_distance_weight_bug = True
    rust_agent = RustRogueNet("../test-data/interpolated-vgated-polar-relpos")

    for obs in [obs1, obs2]:
        action, predicted_return = agent.act(obs)
        print(action["FighterAction"].probs, predicted_return)

        actionrs, predicted_returnrs = rust_agent.forward(obs)
        print(actionrs, predicted_returnrs)

        probs1 = np.array(action["FighterAction"].probs)
        probs2 = np.array(actionrs)
        assert np.allclose(probs1, probs2, atol=1e-3)


def test2():
    # fmt: off
    obs = Observation(
        features={
            "EnemyFighter": [
            ],
            "Bullet": [
            ],
            "Fighter": [
                [235.06451, 67.23907, 476.78607, -191.64099, -0.3507829, -0.9364568, 2628, 0, 0],
            ],
            "Asteroid": [
                [5, 46.376263, 1363.6399, -68.38517, -150.14291, 60.38599],
                [5, 49.34102, 1201.0923, -416.705, -42.51762, 37.487442],
                [5, 35.517136, -812.05225, -587.9508, 109.01546, -16.297422],
                [5, 42.010525, -1360.288, -183.35793, 186.00848, -42.126675],
                [5, 40.753147, 1286.9294, 325.64374, -4.4167175, -72.66925],
                [5, 44.961437, -930.1605, 458.22745, 157.42297, -158.60793],
                [5, 42.685375, -888.70386, 556.05554, -49.145126, -74.60949],
                [5, 27.552427, -579.8093, -584.94794, -1.0592155, 133.90579],
                [5, 31.150223, -821.0509, 691.564, -53.641724, 73.88277],
                [5, 38.9011, -991.45984, -597.4898, -229.52197, 48.143127],
                [5, 39.70717, 1319.2555, 453.46704, 157.47311, 3.314621],
                [5, 24.657486, 1348.7976, -589.1774, -60.488983, -399.08264],
                [5, 44.58143, -1426.1292, -44.35417, 91.22243, -23.057056],
                [5, 40.547077, 1077.5409, 637.836, -111.578735, 208.53827],
                [5, 36.653584, 711.1538, -709.0814, 38.343506, -50.872932],
                [5, 50.828888, 1466.903, -446.5671, 69.12782, -242.57382],
                [5, 31.008062, -1454.4318, -406.70947, 9.857653, -299.56558],
                [5, 38.41469, 1498.4381, 99.3505, -0.17997609, 176.20218],
                [5, 42.33036, -991.62103, 305.83102, 31.80194, -264.99652],
                [5, 53.697002, -669.9784, -564.3115, -16.160547, 137.36206],
                [5, 32.312138, -1149.6965, 318.9307, -29.483334, -220.64932],
                [5, 33.01252, 1135.9131, -481.88245, 78.40583, 52.993008],
                [5, 47.310513, 352.30197, -742.5074, 82.75871, -7.842938],
                [5, 47.90092, -1019.54443, -473.14612, 20.12912, 86.75376],
                [5, 26.029097, 745.67316, 717.29083, -52.49785, 221.72945],
            ],
        },
        ids={
            "EnemyFighter": [],
            "Bullet": [],
            "Fighter": [0],
            "Asteroid": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],
        },
        done=False,
        reward=0.0,
        actions={"FighterAction": CategoricalActionMask(actor_types=["Fighter"])},
    )
    expected = np.array([[1.6215079e-14, 7.5476567e-20, 8.01902e-13, 7.717656e-6, 2.3503164e-13, 5.766065e-13, 2.170947e-18, 0.020175882, 0.9798164, 1.4338702e-16, 7.660783e-28, 6.0274736e-32, 7.3295486e-27, 2.0503333e-29, 2.556611e-29, 4.7988906e-24, 3.618303e-25, 5.356012e-20, 1.292686e-20, 2.200566e-23]])
    # fmt: on

    agent = load_agent("../test-data/interpolated-vgated-polar-relpos")
    agent.agent.backbone.relpos_encoding.enable_negative_distance_weight_bug = True
    rust_agent = RustRogueNet("../test-data/interpolated-vgated-polar-relpos")

    action, predicted_return = agent.act(obs)
    print(action, predicted_return)
    probs = np.array(action["FighterAction"].probs)
    actionrs, predicted_returnrs = rust_agent.forward(obs)
    print(actionrs, predicted_returnrs)
    probsrs = np.array(actionrs)
    assert np.allclose(probs, probsrs, atol=1e-3)
    assert np.allclose(probs, expected, atol=1e-3)
